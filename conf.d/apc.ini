; ----------------------------------------------------------------------
; /etc/php5/conf.d/apc.ini
;
; Configuration for PHP APC (Alternative PHP Cache) module. Please note
; that you'll have to restart php-fpm if you've updated any of your
; php files. This is because we have absolutely no ttl set up here. APC
; will cache all files till the end of time. This ensures that we never
; have to worry about fragmentation within our APC cache and you won't
; need any cache management; APC will simply cache everything!
;
; @link http://xerosphere.net/optimizing-apc-for-drupal
; @link http://www.php.net/manual/en/apc.configuration.php
;-----------------------------------------------------------------------

;; Enable the APC extension.
extension                              = apc.so

;; Set this to 0 if you want to disable APC.
;;
;; Default: 1
apc.enabled                            = 1

;; This determines how many caches with apc.shm_size will be created
;; in our system. The default dotdeb and I guess Debian APC packages
;; aren't compiled with support for this feature. Therefore we set it
;; to 1 and use only a single cache.
;;
;; Default: 1
apc.shm_segments                       = 1

;; The total size of our APC cache. 128M is a lot, you may want to
;; decrease this value, depending on the total amount of memory you
;; have on your machine and how many php stuff you have that APC is able
;; to cache.
;;
;; Default: 32M
apc.shm_size                           = 128M

;; Experimental feature, according to the php docs it doesn't give you
;; any performance gain. We leave it with the default setting.
;;
;; Default: 0
apc.optimization                       = 0

;; A hint for APC how many files we have that can be cached by APC. This
;; is very useful for APC and should be set. But don't start counting
;; your script! This is only useful for configurations with a lot of
;; files. If you're unsure, set to 0.
;;
;; Default: 1000
apc.num_files_hint                     = 512

;; Same as above.
;;
;; Default: 4096
apc.user_entries_hint                  = 1024

;; The time to live (ttl) for any script in the APC cache. We set this
;; to 0; this means that there is no ttl! Each and every script will
;; be cached forever after APC has cached it.
;;
;; Default: 0
apc.ttl                                = 0

;; Same as above but for user entries.
;;
;; Default: 0
apc.user_ttl                           = 0

;; Same as above but for the garbage collector.
;;
;; Default: 3600
apc.gc_ttl                             = 0

;; Cache anything and everything by default. Set to 0 and define filters
;; to cache only specific stuff on your server.
;;
;; Default: 1
apc.cache_by_default                   = 1

;; You can define filters here and tell APC what (or where) it is
;; allowed to cache stuff.
;;
;; Default: NULL
apc.filters                            =

;; Anonymous mmap'ing.
;;
;; Default: NULL
apc.mmap_file_mask                     = /dev/zero

;; Disabled, we use apc.write_lock to ensure that only one process is
;; going to cache a file.
;;
;; Default: 1
apc.slam_defense                       = 0

;; We aren't using broken editors, no need for this. ;)
;;
;; Default: 2
apc.file_update_protection             = 0

;; Disable APC for the CLI mode of php. Only from interest if you plan
;; to debug APC.
;;
;; Default: 0
apc.enable_cli                         = 0

;; The maximum file size of a file to be cached. We have the hardware to
;; handle even big files, so we increase it.
;;
;; Default: 1M
apc.max_file_size                      = 10M

;; Use Server Application Programming Interface (SAPI) for ttl.
;;
;; Default: 1
apc.use_request_time                   = 1

;; This is where the magic begins. Setting this to 0 means that APC will
;; never check if a file has changed. This only works if you always
;; include files in your scripts with an absolute path name (starting
;; with /), which I generally recommend to do because php will include
;; files faster as well. APC will use the absolute path for caching the
;; files. You'll have to restart php-fpm if you've updated any php
;; file!
;;
;; Default: 1
apc.stat                               = 0

;; Ensures that only one process will try to cache a file after restart.
;;
;; Default: 1
apc.write_lock                         = 1

;; Logs if files aren't cached because of late bindings or other reasons.
;; We definitely want to know stuff like that!
;;
;; Default: 0
apc.report_autofilter                  = 1

;; While this increases performance, it also breaks the Drupal admin
;; backend, therefore we keep it set to 0.
;;
;; Default: 0
apc.include_once_override              = 0

;; Activate the local shadow cache for APC.
;;
;; Default: 0
apc.localcache                         = 1

;; Recommended to be half size of apc.num_files_hint. We have the hard-
;; ware so we keep it at the same size to ensure there is enough room.
;;
;; Default: 512
apc.localcache.size                    = 512

;; To dangerous, keep your fingers away from this!
;;
;; Default: 0
apc.coredump_unmap                     = 0

;; No need for. You may want to activate this if you're using rsync or
;; SVN.
;;
;; Default: 0
apc.stat_ctime                         = 0

;; Only from interest if you have an extremely huge amount of files to
;; cache. Keep your fingers away!
;;
;; Default: NULL
apc.preload_path                       =

;; Record MD5 file hashes of cached files. No need for.
;;
;; Default: 0
apc.file_md5                           = 0

;; Canonicalize relative paths, disables caching of streams but is very
;; important for us because we're working in non-stat mode.
;;
;; Default: 1
apc.canonicalize                       = 1

;; Latest feature of APC, introduced in APC 1.3.1 by developer Shrine.
;; Lazy Loading means that the function will be loaded when needed and
;; not simply because it appears somewhere but is unused.
;;
;; Default: 0
apc.lazy_functions                     = 1

;; Same as above but for classes.
;;
;; Default: 0
apc.lazy_classes                       = 1

; ----------------------------------------------------------------------
; APC Upload Progress
; ----------------------------------------------------------------------

;; Disabled, we're using nginx!
apc.rfc1867                            = 0
apc.rfc1867_prefix                     = "upload_"
apc.rfc1867_name                       = "APC_UPLOAD_PROGRESS"
apc.rfc1867_freq                       = 0
